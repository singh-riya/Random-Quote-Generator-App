{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","state","quotes","quote","author","index","fetch","then","res","json","setState","getRandomIndex","this","length","Math","floor","random","tweetURL","className","id","href","target","rel","class","onClick","bind","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAIqBA,E,4MACnBC,MAAQ,CACNC,OAAQ,CACN,CACEC,MACE,8EACFC,OAAQ,gBAGZC,MAAO,G,kEAGY,IAAD,OAClBC,MAdF,0IAeKC,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACC,GACL,EAAKE,SACH,CACER,OAAQM,EAAIN,QAEd,EAAKS,qB,uCAKK,IACRT,EAAWU,KAAKX,MAAhBC,OACR,GAAIA,EAAOW,OAAS,EAAG,CACrB,IAAMR,EAAQS,KAAKC,MAAMD,KAAKE,SAAWd,EAAOW,QAChDD,KAAKF,SAAS,CACZL,a,+BAII,IAAD,EACmBO,KAAKX,MACzBE,EAFC,EACCD,OADD,EACSG,OAEVY,EAAQ,gDAA4Cd,EAAMA,MAAlD,cAA6DA,EAAMC,QAEjF,OACE,mCACE,qBAAKc,UAAU,UAAf,SACE,sBACEC,GAAG,UACHD,UAAU,0DAFZ,UAIE,mBACEA,UAAU,kDACVC,GAAG,UAFL,qDAMA,uBACA,qBAAKD,UAAU,UAAUC,GAAG,YAA5B,SACE,uCACGhB,GACC,gCACE,8BAAMA,EAAMA,QACZ,wCAAWA,EAAMC,aAGrB,sBACEc,UAAU,iCACVC,GAAG,gBAFL,UAIE,wBAAQA,GAAG,cAAX,SACE,oBAAGC,KAAMH,EAAUI,OAAO,SAASC,IAAI,aAAvC,UACE,mBAAGC,MAAM,kBADX,aAIF,yBACEJ,GAAG,gBACHK,QAASZ,KAAKD,eAAec,KAAKb,MAFpC,UAIE,mBAAGW,MAAM,qBAJX,uBAUN,gCACE,mBAAGH,KAAK,gCAAgCD,GAAG,OAA3C,wBADF,0B,GAhFqBO,aCQlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBtB,MAAK,YAAkD,IAA/CuB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ebf9670b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\n\nconst API =\n  \"https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json\";\nexport default class App extends Component {\n  state = {\n    quotes: [\n      {\n        quote:\n          \"Life isnâ€™t about getting and having, itâ€™s about giving and being.\",\n        author: \"Kevin Kruse\",\n      },\n    ],\n    index: 0,\n  };\n\n  componentDidMount() {\n    fetch(API)\n      .then((res) => res.json())\n      .then((res) => {\n        this.setState(\n          {\n            quotes: res.quotes,\n          },\n          this.getRandomIndex\n        );\n      });\n  }\n\n  getRandomIndex() {\n    const { quotes } = this.state;\n    if (quotes.length > 0) {\n      const index = Math.floor(Math.random() * quotes.length);\n      this.setState({\n        index,\n      });\n    }\n  }\n  render() {\n    const { quotes, index } = this.state;\n    const quote = quotes[index];\n    const tweetURL = `https://twitter.com/intent/tweet?text=${quote.quote} - ${quote.author}`;\n\n    return (\n      <>\n        <div className='wrapper'>\n          <div\n            id='content'\n            className='d-flex justify-content-center vh-100 align-items-center'\n          >\n            <p\n              className='display-4 d-flex align-content-center flex-wrap'\n              id='heading'\n            >\n              Random Quote Generator App ðŸš€\n            </p>\n            <br />\n            <div className='box p-6' id='quote-box'>\n              <blockquote>\n                {quote && (\n                  <div>\n                    <div>{quote.quote}</div>\n                    <cite> -- {quote.author}</cite>\n                  </div>\n                )}\n                <div\n                  className='d-flex justify-content-between'\n                  id='btn-container'\n                >\n                  <button id='tweet-quote'>\n                    <a href={tweetURL} target='_blank' rel='noreferrer'>\n                      <i class='fa fa-twitter'></i>tweet\n                    </a>\n                  </button>\n                  <button\n                    id='btn-new-qoute'\n                    onClick={this.getRandomIndex.bind(this)}\n                  >\n                    <i class='fa fa-quote-left'></i>\n                    New Quote\n                  </button>\n                </div>\n              </blockquote>\n            </div>\n            <div>\n              <a href='https://github.com/singh-riya' id='link'>\n                Riya Singh\n              </a>\n              Â© 2021\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./App.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}